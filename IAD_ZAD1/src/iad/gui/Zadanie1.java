/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package iad.gui;

import iad.data.Container;
import iad.data.Entity;
import iad.stat.StatCalculator;
import iad.stat.StatRaportGenerator;
import java.awt.event.ActionEvent;
import java.util.Iterator;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author glabg
 */
public class Zadanie1 extends javax.swing.JFrame {
    
    private static JFrame INSTANCE;
    StatCalculator stats;

    public static void showError(Exception ex) {
        JOptionPane.showMessageDialog(INSTANCE, "Błąd wczytywania pliku CSV!", "Błąd wczytywania CSV", JOptionPane.ERROR_MESSAGE);
    }
    
    private FileChooserDialog fileChooserDialog;

    /**
     * Creates new form Zadanie1
     */
    public Zadanie1() {
        INSTANCE = this;
        fileChooserDialog = new FileChooserDialog(this, true);
        fileChooserDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                fileChooserDialog.setVisible(false);                
            }
        });        
        initComponents();
    }
    
    public static JFrame getInstance() {
        return INSTANCE;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        readCSVButton = new javax.swing.JButton();
        printCollectionButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButtonHistogram = new javax.swing.JButton();
        boxKlass = new javax.swing.JComboBox();
        boxParam = new javax.swing.JComboBox();
        jButtonStatistic = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        boxKlass1 = new javax.swing.JComboBox();
        boxKlass2 = new javax.swing.JComboBox();
        boxParam1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        boxConfidence = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        boxTail = new javax.swing.JComboBox();
        jButtonStatistic1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        readCSVButton.setText("Wczytaj Plik CSV");
        readCSVButton.setActionCommand("importFromCSV");
        readCSVButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readCSVButtonActionPerformed(evt);
            }
        });

        printCollectionButton.setText("Wyświetl Listę");
        printCollectionButton.setEnabled(false);
        printCollectionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printCollectionButtonActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Courier New", 0, 12)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setToolTipText("");
        jTextArea1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTextArea1.setMaximumSize(new java.awt.Dimension(144, 74));
        jScrollPane1.setViewportView(jTextArea1);

        jButtonHistogram.setText("Wyświetl Histogram");
        jButtonHistogram.setEnabled(false);
        jButtonHistogram.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHistogramActionPerformed(evt);
            }
        });

        boxKlass.setEnabled(false);

        boxParam.setEnabled(false);

        jButtonStatistic.setText("Wyświetl charakterystyki");
        jButtonStatistic.setEnabled(false);
        jButtonStatistic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStatisticActionPerformed(evt);
            }
        });

        boxKlass1.setEnabled(false);

        boxKlass2.setEnabled(false);

        boxParam1.setEnabled(false);

        jLabel1.setText("klasa 1");

        jLabel2.setText("klasa 2");

        jLabel3.setText("parametr");
        jLabel3.setToolTipText("");

        jLabel4.setText("poziom istotności");
        jLabel4.setToolTipText("");

        boxConfidence.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0.01", "0.05", "0.10" }));
        boxConfidence.setEnabled(false);

        jLabel5.setText("rodzaj testu");
        jLabel5.setToolTipText("");

        boxTail.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "jednostronny", "obustronny" }));
        boxTail.setEnabled(false);

        jButtonStatistic1.setText("Testuj hipotezy");
        jButtonStatistic1.setToolTipText("");
        jButtonStatistic1.setEnabled(false);
        jButtonStatistic1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStatistic1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Testowanie hipotez");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1)
                            .addComponent(readCSVButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(printCollectionButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonHistogram, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boxKlass, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boxParam, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonStatistic, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boxKlass1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boxKlass2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boxParam1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boxConfidence, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(boxTail, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonStatistic1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(8, 8, 8)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 552, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(readCSVButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(printCollectionButton)
                .addGap(86, 86, 86)
                .addComponent(boxKlass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxParam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jButtonHistogram)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonStatistic)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxKlass1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2)
                .addComponent(jLabel2)
                .addGap(2, 2, 2)
                .addComponent(boxKlass2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(boxParam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxConfidence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boxTail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonStatistic1)
                .addContainerGap(60, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void readCSVButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readCSVButtonActionPerformed
        openFileAction(evt);
    }//GEN-LAST:event_readCSVButtonActionPerformed

    private void printCollectionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printCollectionButtonActionPerformed
        jTextArea1.setText("");
        List<Entity> toPrintList = Container.getInstance().getEntities();
        for (Iterator iterator = toPrintList.iterator(); iterator.hasNext();) {
            Entity entity = (Entity) iterator.next();
            jTextArea1.append(entity.toString());
            jTextArea1.append("\n");
        }

    }//GEN-LAST:event_printCollectionButtonActionPerformed

    private void jButtonHistogramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHistogramActionPerformed
        int []d = new int[1];
        Double[] dataToShow = stats.getFrequencyDistribution((String) boxKlass.getSelectedItem(), boxParam.getSelectedIndex(), d);
        HistogramDialog histogram = new HistogramDialog(this, true, (String) boxKlass.getSelectedItem(), (String) boxParam.getSelectedItem(), dataToShow, d[0]);
        histogram.setVisible(true);
        
    }//GEN-LAST:event_jButtonHistogramActionPerformed

    private void jButtonStatisticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStatisticActionPerformed
        jTextArea1.setText(this.stats.getStats((String) boxKlass.getSelectedItem(), boxParam.getSelectedIndex()));
    }//GEN-LAST:event_jButtonStatisticActionPerformed

    private void jButtonStatistic1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStatistic1ActionPerformed
        jTextArea1.setText(stats.testHypothesis((String) boxKlass1.getSelectedItem(), (String) boxKlass2.getSelectedItem(), boxParam1.getSelectedIndex(), boxTail.getSelectedIndex(), (String) boxConfidence.getSelectedItem()));
    }//GEN-LAST:event_jButtonStatistic1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Zadanie1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Zadanie1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Zadanie1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Zadanie1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        initLookAndFeel();
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Zadanie1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox boxConfidence;
    private javax.swing.JComboBox boxKlass;
    private javax.swing.JComboBox boxKlass1;
    private javax.swing.JComboBox boxKlass2;
    private javax.swing.JComboBox boxParam;
    private javax.swing.JComboBox boxParam1;
    private javax.swing.JComboBox boxTail;
    private javax.swing.JButton jButtonHistogram;
    private javax.swing.JButton jButtonStatistic;
    private javax.swing.JButton jButtonStatistic1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton printCollectionButton;
    private javax.swing.JButton readCSVButton;
    // End of variables declaration//GEN-END:variables

    private void openFileAction(ActionEvent evt) {
        fileChooserDialog.setAction(evt.getActionCommand());
        fileChooserDialog.setVisible(true);
        switchButtons(false);
        if (!Container.getInstance().isEmpty()) {
            boxesSetUpAfterFileLoading();
            stats = new StatCalculator(new StatRaportGenerator());
        }
    }
    
    private void boxesSetUpAfterFileLoading() {
        
        int noOfClasses = Container.getInstance().getClasses().size() + 1;
        String[] klasses = Container.getInstance().getClasses().toArray(new String[noOfClasses]);
        klasses[noOfClasses - 1] = "zbiorczy";
        boxKlass.setModel(new javax.swing.DefaultComboBoxModel(klasses));
        boxKlass1.setModel(new javax.swing.DefaultComboBoxModel(klasses));
        boxKlass2.setModel(new javax.swing.DefaultComboBoxModel(klasses));
        
        int noOfParams = Container.getInstance().getNubmerOfParamters();
        String[] params = new String[noOfParams];
        for (Integer i = 1; i <= noOfParams; i++) {
            params[i - 1] = i.toString();
        }
        boxParam.setModel(new javax.swing.DefaultComboBoxModel(params));
        boxParam1.setModel(new javax.swing.DefaultComboBoxModel(params));
        switchButtons(true);
    }
    
    private void switchButtons(boolean b) {
        printCollectionButton.setEnabled(b);
        jButtonHistogram.setEnabled(b);
        jButtonStatistic.setEnabled(b);
        jButtonStatistic1.setEnabled(b);
        boxKlass.setEnabled(b);
        boxKlass1.setEnabled(b);
        boxKlass2.setEnabled(b);
        boxParam.setEnabled(b);
        boxParam1.setEnabled(b);
        boxConfidence.setEnabled(b);
        boxTail.setEnabled(b);
    }
    
    	private static void initLookAndFeel() {
		String lookAndFeel = null;
		lookAndFeel = UIManager.getSystemLookAndFeelClassName();
		try {
			UIManager.setLookAndFeel(lookAndFeel);
		} 
		catch (ClassNotFoundException e) {
		} 
		catch (UnsupportedLookAndFeelException e) {
		} 
		catch (Exception e) {
			e.printStackTrace();
		}
	}
}
